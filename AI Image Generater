import customtkinter as ctk
import tkinter
import os
import openai
import requests, io
from PIL import Image, ImageTk, ImageGrab
from tkinter import filedialog


def generate():
    openai.api_key = os.getenv("OPENAI_API_KEY")

    user_prompt = prompt_entry.get("0.0", tkinter.END)
    user_prompt += " in style: " + style_dropdown.get()

    response = openai.Image.create(
        prompt=user_prompt,
        n=int(number_slider.get()),
        size="512x512"

    )
    image_urls = []
    for i in range(len(response['data'])):
        image_urls.append(response['data'][i]['url'])

    print(image_urls)

    images = []
    for url in image_urls:
        response = requests.get(url)
        image = Image.open(io.BytesIO(response.content))
        photo_image = ImageTk.PhotoImage(image)
        images.append(photo_image)

    def update_image(index=0):
        canvas.image = images[index]
        canvas.create_image(0, 0, anchor="nw", image=images[index])
        index = (index + 1) % len(images)
        canvas.after(3000, update_image, index)

        # Create the save button if it doesn't exist
        if not canvas.find_withtag("save_button"):
            save_button = ctk.CTkButton(canvas, text="Save Image")
            save_button.config(command=lambda: save_image(images[index]))
            save_button.pack(side="bottom", pady=10, tag="save_button")

        # Otherwise, update the command of the existing button
        else:
            save_button = canvas.find_withtag("save_button")[0]
            canvas.itemconfigure(save_button, command=lambda: save_image(images[index]))

    def save_image(index):
        # get filename and location to save image
        filename = filedialog.asksaveasfilename(defaultextension='.png',
                                                filetypes=[('PNG', '.png'), ('JPEG', '.jpeg'), ('All files', '*.*')])

        # get the displayed image on the canvas
        image_id = canvas.find_all()[0]
        image = ImageTk.getimage(canvas.itemcget(image_id, 'image'))

        # save the image to the chosen file location
        image.save(filename)

    update_image()
app = ctk.CTk()
app.title("AI Image Generater")
ctk.set_appearance_mode("system")

input_frame = ctk.CTkFrame(app)
input_frame.pack(side="left", expand="true", padx=20, pady=20)

prompt_label = ctk.CTkLabel(input_frame, text="prompt")
prompt_label.grid(row=0, column=0, padx=10, pady=10)
prompt_entry = ctk.CTkTextbox(input_frame, height=10)
prompt_entry.grid(row=0, column=1, padx=10, pady=10)

style_label = ctk.CTkLabel(input_frame, text="style")
style_label.grid(row=1, column=0, padx=10, pady=10)
style_dropdown =ctk.CTkComboBox(input_frame,values=["Cubist","Realistic","Cartoon","3D Illustration","Flat Art","Van Gogh","Picasso","Pop Art","Watercolor","Oil painting","Pointillism","Comic Book","Expressionism","Abstract","Fauvism","Impressionism","Renaissance","Gothic","Art Nouveau","Retro","Surrealism","Anime/Manga","Graffiti","Street Art"])
style_dropdown.grid(row=1,column=1,padx=10,pady=10)

number_label = ctk.CTkLabel(input_frame,text="# images")
number_label.grid(row=2,column=0)
number_slider=ctk.CTkSlider(input_frame,from_=1,to=10,number_of_steps=9)
number_slider.grid(row=2,column=1)

generate_button=ctk.CTkButton(input_frame,text="Generate Image",command=generate)
generate_button.grid(row=3,columnspan=2,sticky="news",padx=10,pady=10)

canvas =tkinter.Canvas(app,width=512,height=512)
canvas.pack(side="left")

app.mainloop()
